rst_endo_sparcc.cor <- read.delim("data/sparcc_output/Endosphere_RST-04-106_cor_sparcc.out", sep = "\t", header = T, row.names = 1)
rst_endo_sparcc.pval <- read.delim("data/sparcc_output/Endosphere_RST-04-106_pvals.two_sided.txt", sep = "\t", header = T, row.names = 1)
phona_rst_endo <-PhONA(physeqobj = rst_endo, cordata = rst_endo_sparcc.cor,
pdata = rst_endo_sparcc.pval, model = "lasso",
iters = ITERS, defineTreatment = "RST-04-106",nodesize = 5,
PhenoNodesize = 12, definePhenotype = "Marketable", PhenoNodelabel = "RST-04-106")
maxi_endo_sparcc.cor <- read.delim("data/sparcc_output/Endosphere_Maxifort_cor_sparcc.out", sep = "\t", header = T, row.names = 1)
maxi_endo_sparcc.pval <- read.delim("data/sparcc_output/Endosphere_Maxifort_pvals.two_sided.txt", sep = "\t", header = T, row.names = 1)
phona_maxi_endo <-PhONA(physeqobj = maxi_endo, cordata = maxi_endo_sparcc.cor,
pdata = maxi_endo_sparcc.pval, model = "lasso",
iters = ITERS, defineTreatment = "Maxifort",nodesize = 5,
PhenoNodesize = 12, definePhenotype = "Marketable", PhenoNodelabel = "Maxifort")
ng_rhizo_sparcc.cor <- read.delim("data/sparcc_output/Rhizosphere_Nongraft_cor_sparcc.out", sep = "\t", header = T, row.names = 1)
ng_rhizo_sparcc.pval <- read.delim("data/sparcc_output/Rhizosphere_Nongraft_pvals.two_sided.txt", sep = "\t", header = T, row.names = 1)
phona_ng_rhizo <- PhONA(physeqobj = ng_rhizo, cordata = ng_rhizo_sparcc.cor,
pdata = ng_rhizo_sparcc.pval, model = "lasso",
iters = ITERS, defineTreatment = "Nongraft",nodesize = 5,
PhenoNodesize = 12, definePhenotype = "Marketable", PhenoNodelabel = "Nongraft")
# sg_rhizo_sparcc.cor <- read.delim("data/sparcc_output/Rhizosphere_Selfgraft_cor_sparcc.out", sep = "\t", header = T, row.names = 1)
# sg_rhizo_sparcc.pval <- read.delim("data/sparcc_output/Rhizosphere_Selfgraft_pvals.two_sided.txt", sep = "\t", header = T, row.names = 1)
#
# phona_sg_rhizo <- PhONA(physeqobj = sg_rhizo, cordata = sg_rhizo_sparcc.cor,
#       pdata = sg_rhizo_sparcc.pval, model = "lasso",
#       iters = ITERS, defineTreatment = "Selfgraft",nodesize = 5,
#       PhenoNodesize = 12, definePhenotype = "Marketable", PhenoNodelabel = "Selfgraft")
rst_rhizo_sparcc.cor <- read.delim("data/sparcc_output/Rhizosphere_RST-04-106_cor_sparcc.out", sep = "\t", header = T, row.names = 1)
rst_rhizo_sparcc.pval <- read.delim("data/sparcc_output/Rhizosphere_RST-04-106_pvals.two_sided.txt", sep = "\t", header = T, row.names = 1)
phona_rst_rhizo <- PhONA(physeqobj = rst_rhizo, cordata = rst_rhizo_sparcc.cor,
pdata = rst_rhizo_sparcc.pval, model = "lasso",
iters = ITERS, defineTreatment = "RST-04-106",nodesize = 5,
PhenoNodesize = 12, definePhenotype = "Marketable", PhenoNodelabel = "RST-04-106")
maxi_rhizo_sparcc.cor <- read.delim("data/sparcc_output/Rhizosphere_Maxifort_cor_sparcc.out", sep = "\t", header = T, row.names = 1)
maxi_rhizo_sparcc.pval <- read.delim("data/sparcc_output/Rhizosphere_Maxifort_pvals.two_sided.txt", sep = "\t", header = T, row.names = 1)
phona_maxi_rhizo <- PhONA(physeqobj = maxi_rhizo, cordata = maxi_rhizo_sparcc.cor,
pdata = maxi_rhizo_sparcc.pval, model = "lasso",
defineTreatment = "Maxifort",nodesize = 5,
iters = ITERS, PhenoNodesize = 12, definePhenotype = "Marketable", PhenoNodelabel = "Maxifort")
# Endosphere
role_df_Endosphere <- rbind(phona_ng_endo$role_analyses,
phona_sg_endo$role_analyses,
phona_rst_endo$role_analyses,
phona_maxi_endo$role_analyses)
head(role_df_Endosphere )
fig3b_endo <-ggplot(role_df_Endosphere, aes(participation,connectivity,label=name)) + geom_point(aes(colour = factor(Treatment)))+
scale_size(guide = 'none')+
scale_color_manual(breaks= c("Nongraft", "Selfgraft", "RST-04-106", "Maxifort"),values = c("mediumaquamarine","sienna4","#ffae19","blueviolet"))+
geom_text(aes(label=ifelse(role!="Peripheral",as.character(Order),'')),hjust=0.1,vjust=0.1,size=3,color="black",family="Times New Roman")+
geom_hline(yintercept=2.5, linetype="dashed", color = "red")+
geom_vline(xintercept = 0.62, linetype="dashed",color = "blue")+
annotate("text", x = 0.2, y = 3, label = "Module hubs",color="gray20",size=8,family="Times New Roman")+
annotate("text", x = 0.75, y = 3, label = " Network hubs",color="gray20",size=8,family="Times New Roman")+
annotate("text", x = 0.2, y = -2, label = "Peripherals",color="gray20",size=8,family="Times New Roman")+
annotate("text", x = 0.75, y = -2, label = "Connectors",color="gray20",size=8,family="Times New Roman")+
labs(x = "Among-module connectivity", y = "Within-module degree", col="Rootstocks") +
theme_bw() +
scale_x_continuous(limits = c(0, 1.0))+
theme(axis.text=element_text(size=16,face="bold",family="Times New Roman"),axis.title=element_text(size=16,face="bold",family="Times New Roman"))+
labs(fill = "Dose (mg)") +
theme(legend.title=element_text(size=16,face="bold",family="Times New Roman"),
legend.text=element_text(size=16,family="Times New Roman")) +
guides(color = guide_legend(override.aes = list(size=5)))
fig3b_endo
phona_ng_endo$role_analyses
phona_ng_endo$roles
# Endosphere
role_df_Endosphere <- rbind(phona_ng_endo$roles,
phona_sg_endo$roles,
phona_rst_endo$roles,
phona_maxi_endo$roles)
head(role_df_Endosphere )
fig3b_endo <-ggplot(role_df_Endosphere, aes(participation,connectivity,label=name)) + geom_point(aes(colour = factor(Treatment)))+
scale_size(guide = 'none')+
scale_color_manual(breaks= c("Nongraft", "Selfgraft", "RST-04-106", "Maxifort"),values = c("mediumaquamarine","sienna4","#ffae19","blueviolet"))+
geom_text(aes(label=ifelse(role!="Peripheral",as.character(Order),'')),hjust=0.1,vjust=0.1,size=3,color="black",family="Times New Roman")+
geom_hline(yintercept=2.5, linetype="dashed", color = "red")+
geom_vline(xintercept = 0.62, linetype="dashed",color = "blue")+
annotate("text", x = 0.2, y = 3, label = "Module hubs",color="gray20",size=8,family="Times New Roman")+
annotate("text", x = 0.75, y = 3, label = " Network hubs",color="gray20",size=8,family="Times New Roman")+
annotate("text", x = 0.2, y = -2, label = "Peripherals",color="gray20",size=8,family="Times New Roman")+
annotate("text", x = 0.75, y = -2, label = "Connectors",color="gray20",size=8,family="Times New Roman")+
labs(x = "Among-module connectivity", y = "Within-module degree", col="Rootstocks") +
theme_bw() +
scale_x_continuous(limits = c(0, 1.0))+
theme(axis.text=element_text(size=16,face="bold",family="Times New Roman"),axis.title=element_text(size=16,face="bold",family="Times New Roman"))+
labs(fill = "Dose (mg)") +
theme(legend.title=element_text(size=16,face="bold",family="Times New Roman"),
legend.text=element_text(size=16,family="Times New Roman")) +
guides(color = guide_legend(override.aes = list(size=5)))
fig3b_endo
role_df_Endosphere
role_df_Endosphere$role
unique(as.character(role_df_Endosphere$role))
role_df_Endosphere$role <- as.character(role_df_Endosphere$role)
role_df_Endosphere$role
role_df_Endosphere$role <- as.character(role_df_Endosphere$role)
role_df_Endosphere$role [role_df_Endosphere$role == "Ultra peripheral"] <- "Peripheral"
head(role_df_Endosphere )
role_df_Endosphere$role
fig3b_endo <-ggplot(role_df_Endosphere, aes(participation,connectivity,label=name)) + geom_point(aes(colour = factor(Treatment)))+
scale_size(guide = 'none')+
scale_color_manual(breaks= c("Nongraft", "Selfgraft", "RST-04-106", "Maxifort"),values = c("mediumaquamarine","sienna4","#ffae19","blueviolet"))+
geom_text(aes(label=ifelse(role!="Peripheral",as.character(Order),'')),hjust=0.1,vjust=0.1,size=3,color="black",family="Times New Roman")+
geom_hline(yintercept=2.5, linetype="dashed", color = "red")+
geom_vline(xintercept = 0.62, linetype="dashed",color = "blue")+
annotate("text", x = 0.2, y = 3, label = "Module hubs",color="gray20",size=8,family="Times New Roman")+
annotate("text", x = 0.75, y = 3, label = " Network hubs",color="gray20",size=8,family="Times New Roman")+
annotate("text", x = 0.2, y = -2, label = "Peripherals",color="gray20",size=8,family="Times New Roman")+
annotate("text", x = 0.75, y = -2, label = "Connectors",color="gray20",size=8,family="Times New Roman")+
labs(x = "Among-module connectivity", y = "Within-module degree", col="Rootstocks") +
theme_bw() +
scale_x_continuous(limits = c(0, 1.0))+
theme(axis.text=element_text(size=16,face="bold",family="Times New Roman"),axis.title=element_text(size=16,face="bold",family="Times New Roman"))+
labs(fill = "Dose (mg)") +
theme(legend.title=element_text(size=16,face="bold",family="Times New Roman"),
legend.text=element_text(size=16,family="Times New Roman")) +
guides(color = guide_legend(override.aes = list(size=5)))
fig3b_endo
phona_ng_rhizo
sg_rhizo_sparcc.cor <- read.delim("data/sparcc_output/Rhizosphere_Selfgraft_cor_sparcc.out", sep = "\t", header = T, row.names = 1)
sg_rhizo_sparcc.pval <- read.delim("data/sparcc_output/Rhizosphere_Selfgraft_pvals.two_sided.txt", sep = "\t", header = T, row.names = 1)
phona_sg_rhizo <- PhONA(physeqobj = sg_rhizo, cordata = sg_rhizo_sparcc.cor,
pdata = sg_rhizo_sparcc.pval, model = "lasso",
iters = ITERS, defineTreatment = "Selfgraft",nodesize = 5,
PhenoNodesize = 12, definePhenotype = "Marketable", PhenoNodelabel = "Selfgraft")
document()
build()
pkgdown::build_site()
document()
build()
pkgdown::build_site()
document()
build()
pkgdown::build_site()
document()
phyobj <- readRDS(system.file("extdata", "physeqobject.rds", package = "PhONA"))
sparcc.cor <- read.delim(system.file("extdata", "cor_sparcc.out", package = "PhONA"), sep = "\t", header = T, row.names = 1)
sparcc.pval <- read.delim(system.file("extdata", "pvals.txt", package = "PhONA"), sep = "\t", header = T, row.names = 1)
phyobj = taxacolor(phyobj = phyobj, coloredby = "Phylum")
example_lm <- PhONA(
physeqobj = phyobj,
cordata = sparcc.cor,
pdata = sparcc.pval,
model = "lm",
iters=1,
OTU_OTU_pvalue = 0.05,
OTU_OTU_rvalue = 0.5,
OTU_Phenotype_pvalue = 0.6,
definePhenotype = "Marketable",
defineTreatment = "Maxifort",
PhenoNodecolor = "yellow",
PhenoNodesize = 20,
PhenoNodelabel = "Yield",
nodesize = 10,
Pheno2OTUedgecolor = "black",
netlayout = layout.fruchterman.reingold
)
example_lm
example_lm
summary.graph(example_lm$phona_graph)
summary.graph(example_lm$phona_graph)
document()
summary.graph(example_lm$phona_graph)
aa = example_lm$phona_graph
aa
document()
summary.graph(example_lm$phona_graph, example_lm$roles)
graph.object = example_lm$phyloseqobj
top3hub<-top3Hub(graph.object)[1]
top3Hub <- function(graph.object){
aa <- authority.score(graph.object)$vector
bb <- V(graph.object)
dd <- list(bb,round(aa,3))
df <-  data.frame(matrix(unlist(dd), nrow=length(V(graph.object)), byrow=F))
ordf <- df[with(df, order(-df[,2])), ]
Hub <- ordf[1:3,1]
grabHub <- paste(Hub,collapse=";")
HUbV <- ordf[1:3,2]
grabHubV <- paste(HUbV,collapse=";")
grab <- c(grabHub,grabHubV)
return(grab)
}
op3hubv<-top3Hub(graph.object)[2]
top3hub<-top3Hub(graph.object)[1]
graph.object
graph.object = example_lm$phona_graph
top3hub<-top3Hub(graph.object)[1]
op3hub
top3hub
sum((E(graph.object)$weight > 0 ) * 1)
E(graph.object)$weight)
E
E
E(graph.object)
E(graph.object)$weight
E(graph.object)$weights
graph.object
E(graph.object)$ weight_1
E(graph.object)$weight_2
E(graph.object)$weight_2 > 0
E(graph.object)$weight_2 > 0sum((E(graph.object)$weight_2 > 0 ) * 1)
sum((E(graph.object)$weight_2 > 0 ) * 1)
sum(E(graph.object)$weight_2 > 0)
E(graph.object)$weight_2 > 0 ) * 1
E(graph.object)$weight_2
E(graph.object)$weight_2 > 0
sum(E(graph.object)$weight_2 > 0)
E(graph.object)$weight_2 > 0
aa = E(graph.object)$weight_2 > 0
bb = na.omit(aa)
bb
sum(bb)
bb
dd =data.frame(bb)
dd
head(dd)
sum(bb)
bb = E(graph.object)$weight_2 > 0 na.omit(aa)
E(graph.object)$weight_2 > 0
E(graph.object)$weight_2 > 0  %>% na.omit() %>% as.vector()
E(graph.object)$weight_2 > 0  %>% na.omit()
E(graph.object)$weight_2 > 0  %>% na.omit(.)
E(graph.object)$weight_2 > 0
as.vector(E(graph.object)$weight_2 > 0 )
as.vector(E(graph.object)$weight_2 > 0 ) %>% na.omit()
E(graph.object)$weight_2 > 0  %>% na.omit()
as.vector(E(graph.object)$weight_2 > 0 ) %>% na.omit()
as.vector(E(graph.object)$weight_2 > 0 ) %>% na.omit() %>% as.vector()
as.vector(E(graph.object)$weight_2 > 0 ) %>% na.omit() %>% as.vector() %>% sum()
n_postiveL <-as.vector(E(graph.object)$weight_2 > 0 ) %>% na.omit() %>% as.vector() %>% sum()
n_negativeL <- as.vector(E(graph.object)$weight_2 < 0 ) %>% na.omit() %>% as.vector() %>% sum()
n_negativeL
document()
summary.graph(example_lm$phona_graph, example_lm$roles)
summary.graph(example_lasso$phona_graph, example_lasso$roles)
example_lasso <- PhONA(
physeqobj = phyobj,
cordata = sparcc.cor,
pdata = sparcc.pval,
model = "lasso",
iters=2,
OTU_OTU_pvalue = 0.001,
OTU_OTU_rvalue = 0.6,
OTU_Phenotype_pvalue = 0.6,
definePhenotype = "Marketable",
defineTreatment = "Maxifort",
PhenoNodecolor = "yellow",
PhenoNodesize = 20,
PhenoNodelabel = "Yield",
nodesize = 10,
Pheno2OTUedgecolor = "black",
netlayout = layout.fruchterman.reingold
)
summary.graph(example_lasso$phona_graph, example_lasso$roles)
df = data.frame(summary.graph(example_lasso$phona_graph, example_lasso$roles), )
summary.graph(example_lasso$phona_graph, example_lasso$roles)
df = data.frame(summary.graph(example_lasso$phona_graph, example_lasso$roles),
summary.graph(example_lasso$phona_graph, example_lasso$roles),
summary.graph(example_lasso$phona_graph, example_lasso$roles))
df
roles_merged = example_lasso$roles
roles_merged
net.twoexample_lasso$phona_graph
net.two= example_lasso$phona_graph
net.two
graph_summary <- summary.graph(net.two, roles_merged)
graph_summary
roles_merged$Treatment
unique(roles_merged$Treatment)
graph_summary["Treatment"] <-  unique(roles_merged$Treatment)
graph_summary
document()
example_lasso <- PhONA(
physeqobj = phyobj,
cordata = sparcc.cor,
pdata = sparcc.pval,
model = "lasso",
iters=2,
OTU_OTU_pvalue = 0.001,
OTU_OTU_rvalue = 0.6,
OTU_Phenotype_pvalue = 0.6,
definePhenotype = "Marketable",
defineTreatment = "Maxifort",
PhenoNodecolor = "yellow",
PhenoNodesize = 20,
PhenoNodelabel = "Yield",
nodesize = 10,
Pheno2OTUedgecolor = "black",
netlayout = layout.fruchterman.reingold
)
example_lasso$graph_summary
df = data.frame(example_lasso$graph_summary, example_lasso$graph_summary)
df
df = rbind(example_lasso$graph_summary, example_lasso$graph_summary)
df
document()
build()
pkgdown::build_site()
document()
help("summary.graph")
summary.graph
summary.graph(example_lm$phona_graph, example_lm$roles)
library(tufte)
library(PhONA)
phyobj <- readRDS(system.file("extdata", "physeqobject.rds", package = "PhONA"))
sparcc.cor <- read.delim(system.file("extdata", "cor_sparcc.out", package = "PhONA"), sep = "\t", header = T, row.names = 1)
sparcc.pval <- read.delim(system.file("extdata", "pvals.txt", package = "PhONA"), sep = "\t", header = T, row.names = 1)
phyobj = taxacolor(phyobj = phyobj, coloredby = "Phylum")
example_lm <- PhONA(
physeqobj = phyobj,
cordata = sparcc.cor,
pdata = sparcc.pval,
model = "lm",
iters=1,
OTU_OTU_pvalue = 0.05,
OTU_OTU_rvalue = 0.5,
OTU_Phenotype_pvalue = 0.6,
definePhenotype = "Marketable",
defineTreatment = "Maxifort",
PhenoNodecolor = "yellow",
PhenoNodesize = 20,
PhenoNodelabel = "Yield",
nodesize = 10,
Pheno2OTUedgecolor = "black",
netlayout = layout.fruchterman.reingold
)
summary.graph(example_lm$phona_graph, example_lm$roles)
document()
build()
pkgdown::build_site()
library(devtools)
document()
build()
pkgdown::build_site()
document()
document()
document()
library(PhONA)
help(summarizePhONA)
document()
build()
pkgdown::build_site()
knitr::opts_chunk$set(echo = TRUE)
library(PhONA)
# GLOBAL VARIABLE
ITERS=5
###### Load the data
otu_data_fungi <- read.mothur.shared("data/Fungi1415_trim.contigs.trim.unique.precluster.pick.pick.subsample.nn.unique_list.shared")
rownames(otu_data_fungi) <- paste0("F", rownames(otu_data_fungi))
# upload meta data file
bigmetadata <- read.csv("data/block_diversity_selected_tunnel_ww.csv", header = T, row.names = 1, stringsAsFactors = FALSE)
rownames(bigmetadata) <- paste0("F", rownames(bigmetadata))
### select otu_data based on metadata
otu_data <- otu_data_fungi[rownames(bigmetadata), ]
dim(otu_data)
#rownames(otu_data)
otu_data = na.omit(otu_data)
dim(otu_data)
# now select metadata based on od
meta_data <- bigmetadata[rownames(otu_data), , drop = FALSE]
all.equal(row.names(meta_data), row.names(otu_data))
# upload taxanomy file
tax_fungi <- read.mothur.taxonomy("data/Fungi1415_trim.contigs.trim.unique.precluster.pick.pick.subsample.nn.unique_list.0.03.cons.taxonomy")
# checking if taxonomy file and count files have same otus
all.equal(colnames(otu_data), row.names(tax_fungi))
#
########## read in phenome data/ Yield data
# read in data
pheno_data <- read.csv("data/tomato_yield.csv", header = TRUE, stringsAsFactors = FALSE, row.names = 1)
rownames(pheno_data) <- paste0("F", rownames(pheno_data))
hist(pheno_data$Marketable)
pheno_data_mean <- aggregate(pheno_data$Marketable, by=list(Rootstock=pheno_data$Rootstock), FUN=mean)
pheno_data_sel <- pheno_data %>%
select(Rootstock, Compartment, Marketable, Study_site, Year, Sample_name)
meta_withpheo = inner_join(meta_data, pheno_data_sel)
rownames(meta_withpheo)<- rownames(meta_data)
# create a phyloseq object~ can combine count, metadata, taxonomy, and phylogentic tree.
tax.mat <- tax_table(as.matrix(tax_fungi))
otu.mat = otu_table(t(otu_data), taxa_are_rows = TRUE)
sample.mat <- sample_data(meta_withpheo)
physeq = phyloseq(otu.mat, tax.mat, sample.mat)
## Assign color to the taxa on the whole phyloseq object so that the same color is assigned for a taxon across treatments
physeq = taxacolor(phyobj = physeq, coloredby = "Phylum")
physeq
#### All the combinations of treatment factor
region <- unique(as.character(data.frame(sample_data(physeq))$Compartment))
region
treatment <- unique(as.character(data.frame(sample_data(physeq))$Rootstock))
treatment
# Endosphere
ng_endo <- subset_samples(physeq, c(Compartment =="Endosphere" & Rootstock=="Nongraft")) %>%
prune_taxa(taxa_sums(.) > 2, .)
# Inputfile for running SparCC
ng_endo_sparcc = otu_table(ng_endo)
write.table(data.frame(OTU_id = rownames(ng_endo_sparcc), ng_endo_sparcc), file = "data/sparcc_data/ng_endo_sparcc.txt", sep = "\t", row.names = FALSE, quote = FALSE)
sg_endo <- subset_samples(physeq, c(Compartment =="Endosphere" & Rootstock=="Selfgraft")) %>%
prune_taxa(taxa_sums(.) > 2, .)
# Inputfile for running SparCC
sg_endo_sparcc = otu_table(sg_endo)
write.table(data.frame(OTU_id = rownames(sg_endo_sparcc), sg_endo_sparcc), file = "data/sparcc_data/sg_endo_sparcc.txt", sep = "\t", row.names = FALSE, quote = FALSE)
rst_endo <- subset_samples(physeq, c(Compartment =="Endosphere" & Rootstock=="RST-04-106")) %>%
prune_taxa(taxa_sums(.) > 2, .)
# Inputfile for running SparCC
rst_endo_sparcc = otu_table(rst_endo)
write.table(data.frame(OTU_id = rownames(rst_endo_sparcc), rst_endo_sparcc), file = "data/sparcc_data/rst_endo_sparcc.txt", sep = "\t", row.names = FALSE, quote = FALSE)
maxi_endo <- subset_samples(physeq, c(Compartment =="Endosphere" & Rootstock=="Maxifort")) %>%
prune_taxa(taxa_sums(.) > 2, .)
# Inputfile for running SparCC
maxi_endo_sparcc = otu_table(maxi_endo)
write.table(data.frame(OTU_id = rownames(maxi_endo_sparcc), maxi_endo_sparcc), file = "data/sparcc_data/maxi_endo_sparcc.txt", sep = "\t", row.names = FALSE, quote = FALSE)
# Rhizosphere
ng_rhizo <- subset_samples(physeq, c(Compartment =="Rhizosphere" & Rootstock=="Nongraft")) %>%
prune_taxa(taxa_sums(.) > 2, .)
# Inputfile for running SparCC
ng_rhizo_sparcc = otu_table(ng_rhizo)
write.table(data.frame(OTU_id = rownames(ng_rhizo_sparcc), ng_rhizo_sparcc), file = "data/sparcc_data/ng_rhizo_sparcc.txt", sep = "\t", row.names = FALSE, quote = FALSE)
sg_rhizo <- subset_samples(physeq, c(Compartment =="Rhizosphere" & Rootstock=="Selfgraft")) %>%
prune_taxa(taxa_sums(.) > 2, .)
# Inputfile for running SparCC
sg_rhizo_sparcc = otu_table(sg_rhizo)
write.table(data.frame(OTU_id = rownames(sg_rhizo_sparcc), sg_rhizo_sparcc), file = "data/sparcc_data/sg_rhizo_sparcc.txt", sep = "\t", row.names = FALSE, quote = FALSE)
rst_rhizo <- subset_samples(physeq, c(Compartment =="Rhizosphere" & Rootstock=="RST-04-106"))%>%
prune_taxa(taxa_sums(.) > 2, .)
# Inputfile for running SparCC
rst_rhizo_sparcc = otu_table(rst_rhizo)
write.table(data.frame(OTU_id = rownames(rst_rhizo_sparcc), rst_rhizo_sparcc), file = "data/sparcc_data/rst_rhizo_sparcc.txt", sep = "\t", row.names = FALSE, quote = FALSE)
maxi_rhizo <- subset_samples(physeq, c(Compartment =="Rhizosphere" & Rootstock=="Maxifort")) %>%
prune_taxa(taxa_sums(.) > 2, .)
# Inputfile for running SparCC
maxi_rhizo_sparcc = otu_table(maxi_rhizo)
write.table(data.frame(OTU_id = rownames(maxi_rhizo_sparcc), maxi_rhizo_sparcc), file = "data/sparcc_data/maxi_rhizo_sparcc.txt", sep = "\t", row.names = FALSE, quote = FALSE)
ng_endo_sparcc.cor <- read.delim("data/sparcc_output/Endosphere_Nongraft_cor_sparcc.out", sep = "\t", header = T, row.names = 1)
ng_endo_sparcc.pval <- read.delim("data/sparcc_output/Endosphere_Nongraft_pvals.two_sided.txt", sep = "\t", header = T, row.names = 1)
phona_ng_endo <- PhONA(physeqobj = ng_endo, cordata = ng_endo_sparcc.cor,
pdata = ng_endo_sparcc.pval, model = "lasso",
iters = ITERS, defineTreatment = "Nongraft",nodesize = 5,
PhenoNodesize = 12, definePhenotype = "Marketable", PhenoNodelabel = "Nongraft")
document()
ng_endo_sparcc.cor <- read.delim("data/sparcc_output/Endosphere_Nongraft_cor_sparcc.out", sep = "\t", header = T, row.names = 1)
ng_endo_sparcc.pval <- read.delim("data/sparcc_output/Endosphere_Nongraft_pvals.two_sided.txt", sep = "\t", header = T, row.names = 1)
phona_ng_endo <- PhONA(physeqobj = ng_endo, cordata = ng_endo_sparcc.cor,
pdata = ng_endo_sparcc.pval, model = "lasso",
iters = ITERS, defineTreatment = "Nongraft",nodesize = 5,
PhenoNodesize = 12, definePhenotype = "Marketable", PhenoNodelabel = "Nongraft")
phona_ng_endo$graph_summary
document()
build()
pkgdown::build_site()
kable(summary_graph_endo_df)
library(knitr)
kable(summary_graph_endo_df)
example_lm <- PhONA(
physeqobj = phyobj,
cordata = sparcc.cor,
pdata = sparcc.pval,
model = "lm",
iters=1,
OTU_OTU_pvalue = 0.05,
OTU_OTU_rvalue = 0.5,
OTU_Phenotype_pvalue = 0.6,
definePhenotype = "Marketable",
defineTreatment = "Maxifort",
PhenoNodecolor = "yellow",
PhenoNodesize = 20,
PhenoNodelabel = "Yield",
nodesize = 10,
Pheno2OTUedgecolor = "black",
netlayout = layout.fruchterman.reingold
)
phyobj <- readRDS(system.file("extdata", "physeqobject.rds", package = "PhONA"))
sparcc.cor <- read.delim(system.file("extdata", "cor_sparcc.out", package = "PhONA"), sep = "\t", header = T, row.names = 1)
sparcc.pval <- read.delim(system.file("extdata", "pvals.txt", package = "PhONA"), sep = "\t", header = T, row.names = 1)
phyobj = taxacolor(phyobj = phyobj, coloredby = "Phylum")
example_lm <- PhONA(
physeqobj = phyobj,
cordata = sparcc.cor,
pdata = sparcc.pval,
model = "lm",
iters=1,
OTU_OTU_pvalue = 0.05,
OTU_OTU_rvalue = 0.5,
OTU_Phenotype_pvalue = 0.6,
definePhenotype = "Marketable",
defineTreatment = "Maxifort",
PhenoNodecolor = "yellow",
PhenoNodesize = 20,
PhenoNodelabel = "Yield",
nodesize = 10,
Pheno2OTUedgecolor = "black",
netlayout = layout.fruchterman.reingold
)
summarizePhONA(example_lm$phona_graph, example_lm$roles)
kable(summarizePhONA(example_lm$phona_graph, example_lm$roles))
document()
build()
pkgdown::build_site()
document()
build()
pkgdown::build_site()
library(igraphdata)
library(igraph)
data("karate")
plot(karate)
tkplot()
tkplot()
tkid <- tkplot(karate)
library(devtools)
document()
build()
pkgdown::build_site()
document()
build()
pkgdown::build_site()
